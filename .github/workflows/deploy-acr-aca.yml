name: Build and deploy to Azure Container Apps

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/soli-keeper:${{ github.sha }}
      REGISTRY_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Azure Docker login (az acr login)
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Azure Docker login (docker action)
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}

      - name: Deploy to Azure Container App (update)
        env:
          IMAGE: ${{ env.IMAGE_NAME }}
        run: |
          # Ensure az containerapp extension is available
          az extension add --name containerapp || true
          # Login already provided by azure/login
          az containerapp update --name ${{ secrets.CONTAINERAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --image $IMAGE || (
            echo 'Container App update failed; you may need to create the container app first' && exit 1
          )

      - name: Notify deployment
        run: echo "Deployed ${{ env.IMAGE_NAME }} to Container App ${{ secrets.CONTAINERAPP_NAME }}"
